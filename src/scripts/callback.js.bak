//callback handling
const urlParams = new URLSearchParams(window.location.search);
let code = urlParams.get('code');

const getToken = async code => {

  const codeVerifier = localStorage.getItem('code_verifier');

  const url = "https://accounts.spotify.com/api/token";
  const payload = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
      client_id: clientId,
      grant_type: 'authorization_code',
      code,
      redirect_uri: redirectUri,
      code_verifier: codeVerifier,
    }),
  }

  const body = await fetch(url, payload);
  const response = await body.json();

  localStorage.setItem('access_token', response.access_token);
  console.log(response.access_token);
}


//main
async function getCurrentPlayer(accessToken) {
  const url = 'https://api.spotify.com/v1/me/player';

  try {
    const res = await fetch(url, {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${accessToken}`,
        'Accept': 'application/json'
      }
    });

    if (res.status === 204) {
      // No active device / no content
      return null;
    }

    if (res.status === 401) {
      throw new Error('Unauthorized â€” access token may have expired. Refresh token required.');
    }

    if (!res.ok) {
      const text = await res.text();
      throw new Error(`Spotify API error ${res.status}: ${text}`);
    }

    const data = await res.json();
    return data;
  } catch (err) {
    console.error('Error fetching player:', err);
    throw err;
  }
}

function testFetch() {
    const access_token = localStorage.getItem('access_token');
    console.log(access_token);
    getCurrentPlayer(access_token)
      .then(player => console.log(player))
      .catch(err => console.error(err))
}
